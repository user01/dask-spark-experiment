[debug] Created tunnel using local port: '63893'

[debug] SERVER: "127.0.0.1:63893"

[debug] Original chart version: ""
[debug] CHART PATH: /Users/erik/code/python/dask2/dask-cluster-scaler

NAME:   khaki-moth
REVISION: 1
RELEASED: Tue Jun  5 19:15:42 2018
CHART: dask-cluster-scaler-1.0.5
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
image:
  pullPolicy: IfNotPresent
  repository: user01e/dask
  tag: "0.2"
jupyter:
  enabled: true
  name: jupyter
  password: sha1:aae8550c0a44:9507d45e087d5ee481a5ce9f4f16f37a0867318c
  replicas: 1
  resources:
    limits:
      cpu: 2
      memory: 1G
    requests:
      cpu: 1
      memory: 512Mi
  servicePort: 443
  serviceType: LoadBalancer
namespace: default
scheduler:
  name: scheduler
  replicas: 1
  resources:
    limits:
      cpu: 1
      memory: 1G
    requests:
      cpu: 0.7
      memory: 512Mi
  servicePort: 8786
  serviceType: LoadBalancer
webUI:
  name: webui
  servicePort: 80
worker:
  aptPackages: ""
  maximum: 3
  minimum: 0
  name: worker
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 1
      memory: 512Mi

HOOKS:
MANIFEST:

---
# Source: dask-cluster-scaler/templates/dask-jupyter-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: khaki-moth-dask-cluster-scaler-jupyter-config
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: jupyter
    namespace: default
data:
  jupyter_notebook_config.py: |
    c = get_config()
    c.NotebookApp.password = 'sha1:aae8550c0a44:9507d45e087d5ee481a5ce9f4f16f37a0867318c'
---
# Source: dask-cluster-scaler/templates/dask-scheduler-service.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: khaki-moth-dask-cluster-scaler-autoscaler
  namespace: default
---
# Source: dask-cluster-scaler/templates/dask-scheduler-service.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: khaki-moth-dask-cluster-scaler-autoscaler
rules:
- apiGroups: [""]
  resources: ["deployment"]
  resourceNames: ["khaki-moth-dask-cluster-scaler-worker"]
  verbs: ["update", "get"]
---
# Source: dask-cluster-scaler/templates/dask-scheduler-service.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: khaki-moth-dask-cluster-scaler-autoscaler
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: khaki-moth-dask-cluster-scaler-autoscaler
subjects:
  - kind: ServiceAccount
    name: khaki-moth-dask-cluster-scaler-autoscaler
    namespace: default
---
# Source: dask-cluster-scaler/templates/dask-jupyter-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: khaki-moth-dask-cluster-scaler-jupyter
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: jupyter
    namespace: default
spec:
  ports:
    - port: 443
      targetPort: 8888
  selector:
    app: dask-cluster-scaler
    release: "khaki-moth"
    component: jupyter
  type: LoadBalancer
---
# Source: dask-cluster-scaler/templates/dask-scheduler-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: khaki-moth-dask-cluster-scaler-scheduler
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: scheduler
    namespace: default
spec:
  serviceAccountName: khaki-moth-dask-cluster-scaler-autoscaler
  automountServiceAccountToken: true
  ports:
    - name: khaki-moth-dask-cluster-scaler-scheduler
      port: 8786
      targetPort: 8786
    - name: khaki-moth-dask-cluster-scaler-webui
      port: 80
      targetPort: 8787
  selector:
    app: dask-cluster-scaler
    release: "khaki-moth"
    component: scheduler
  type: LoadBalancer
---
# Source: dask-cluster-scaler/templates/dask-jupyter-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: khaki-moth-dask-cluster-scaler-jupyter
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: jupyter
    namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dask-cluster-scaler
      release: "khaki-moth"
      component: jupyter
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dask-cluster-scaler
        release: "khaki-moth"
        component: jupyter
    spec:
      containers:
        - name: khaki-moth-dask-cluster-scaler-jupyter
          image: "user01e/dask:0.2"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
          resources:
            limits:
              cpu: 2
              memory: 1G
            requests:
              cpu: 1
              memory: 512Mi
            
          volumeMounts:
            - name: config-volume
              mountPath: /home/jovyan/.jupyter
          env:
            - name: DASK_SCHEDULER_ADDRESS
              value: khaki-moth-dask-cluster-scaler-scheduler:8786
      volumes:
        - name: config-volume
          configMap:
            name: khaki-moth-dask-cluster-scaler-jupyter-config
---
# Source: dask-cluster-scaler/templates/dask-scheduler-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: khaki-moth-dask-cluster-scaler-scheduler
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: scheduler
    namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dask-cluster-scaler
      release: "khaki-moth"
      component: scheduler
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dask-cluster-scaler
        release: "khaki-moth"
        component: scheduler
    spec:
      containers:
        - name: khaki-moth-dask-cluster-scaler-scheduler
          image: "user01e/dask:0.2"
          imagePullPolicy: IfNotPresent
          args:
            - dask-scheduler
            - --port
            - "8786"
            - --bokeh-port
            - "8787"
            - --preload
            - /adaptive_scheduler.py
          ports:
            - containerPort: 8786
            - containerPort: 8787
          resources:
            limits:
              cpu: 1
              memory: 1G
            requests:
              cpu: 0.7
              memory: 512Mi
            
          env:
            - name: NAMESPACE
              value: default
            - name: WORKER_MINIMUM
              value: "0"
            - name: WORKER_MAXIMUM
              value: "3"
            - name: WORKER_LABELS
              value: app=dask-cluster-scaler,component=worker
            - name: WORKER_IMAGE
              value: "user01e/dask:0.2"
            - name: WORKER_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: WORKER_RESOURCES
              value: "{\"limits\":{\"cpu\":1,\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":1,\"memory\":\"512Mi\"}}"
            - name: WORKER_ARGS
              value: dask-worker,khaki-moth-dask-cluster-scaler-scheduler:8786,--nthreads,"1",--memory-limit,"1024Mi",--no-bokeh,'--host','$(POD_IP)','--name','$(POD_NAME)'
---
# Source: dask-cluster-scaler/templates/dask-worker-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: khaki-moth-dask-cluster-scaler-worker
  labels:
    app: dask-cluster-scaler
    heritage: "Tiller"
    release: "khaki-moth"
    chart: dask-cluster-scaler-1.0.5
    component: worker
  namespace: default
spec:
  replicas: 0
  selector:
    matchLabels:
      app: dask-cluster-scaler
      release: "khaki-moth"
      component: worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dask-cluster-scaler
        release: "khaki-moth"
        component: worker
    spec:
      containers:
        - name: khaki-moth-dask-cluster-scaler-worker
          image: "user01e/dask:0.2"
          imagePullPolicy: IfNotPresent
          args:
            - dask-worker
            - khaki-moth-dask-cluster-scaler-scheduler:8786
            - --nthreads
            - "1"
            - --memory-limit
            - "1024Mi"
            - --no-bokeh
          ports:
            - containerPort: 8789
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 1
              memory: 512Mi
            
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
# Source: dask-cluster-scaler/templates/dask-worker-deployment.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: khaki-moth-dask-cluster-scaler-worker-no-disruption
  namespace: default
spec:
  selector:
    matchLabels:
      app: dask-cluster-scaler
  minAvailable: 100%
